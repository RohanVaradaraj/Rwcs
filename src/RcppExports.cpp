// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Cwcs_s2p
SEXP Cwcs_s2p(Rcpp::NumericVector RA, Rcpp::NumericVector Dec, Rcpp::String CTYPE1, Rcpp::String CTYPE2, double CRVAL1, double CRVAL2, double CRPIX1, double CRPIX2, double CD1_1, double CD1_2, double CD2_1, double CD2_2, Rcpp::String RADESYS, int EQUINOX, double PV1_1, double PV1_2, double PV1_3, double PV2_1, double PV2_2, double PV2_3, double PV2_4, double PV2_5);
RcppExport SEXP _Rwcs_Cwcs_s2p(SEXP RASEXP, SEXP DecSEXP, SEXP CTYPE1SEXP, SEXP CTYPE2SEXP, SEXP CRVAL1SEXP, SEXP CRVAL2SEXP, SEXP CRPIX1SEXP, SEXP CRPIX2SEXP, SEXP CD1_1SEXP, SEXP CD1_2SEXP, SEXP CD2_1SEXP, SEXP CD2_2SEXP, SEXP RADESYSSEXP, SEXP EQUINOXSEXP, SEXP PV1_1SEXP, SEXP PV1_2SEXP, SEXP PV1_3SEXP, SEXP PV2_1SEXP, SEXP PV2_2SEXP, SEXP PV2_3SEXP, SEXP PV2_4SEXP, SEXP PV2_5SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type RA(RASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Dec(DecSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type CTYPE1(CTYPE1SEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type CTYPE2(CTYPE2SEXP);
    Rcpp::traits::input_parameter< double >::type CRVAL1(CRVAL1SEXP);
    Rcpp::traits::input_parameter< double >::type CRVAL2(CRVAL2SEXP);
    Rcpp::traits::input_parameter< double >::type CRPIX1(CRPIX1SEXP);
    Rcpp::traits::input_parameter< double >::type CRPIX2(CRPIX2SEXP);
    Rcpp::traits::input_parameter< double >::type CD1_1(CD1_1SEXP);
    Rcpp::traits::input_parameter< double >::type CD1_2(CD1_2SEXP);
    Rcpp::traits::input_parameter< double >::type CD2_1(CD2_1SEXP);
    Rcpp::traits::input_parameter< double >::type CD2_2(CD2_2SEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type RADESYS(RADESYSSEXP);
    Rcpp::traits::input_parameter< int >::type EQUINOX(EQUINOXSEXP);
    Rcpp::traits::input_parameter< double >::type PV1_1(PV1_1SEXP);
    Rcpp::traits::input_parameter< double >::type PV1_2(PV1_2SEXP);
    Rcpp::traits::input_parameter< double >::type PV1_3(PV1_3SEXP);
    Rcpp::traits::input_parameter< double >::type PV2_1(PV2_1SEXP);
    Rcpp::traits::input_parameter< double >::type PV2_2(PV2_2SEXP);
    Rcpp::traits::input_parameter< double >::type PV2_3(PV2_3SEXP);
    Rcpp::traits::input_parameter< double >::type PV2_4(PV2_4SEXP);
    Rcpp::traits::input_parameter< double >::type PV2_5(PV2_5SEXP);
    rcpp_result_gen = Rcpp::wrap(Cwcs_s2p(RA, Dec, CTYPE1, CTYPE2, CRVAL1, CRVAL2, CRPIX1, CRPIX2, CD1_1, CD1_2, CD2_1, CD2_2, RADESYS, EQUINOX, PV1_1, PV1_2, PV1_3, PV2_1, PV2_2, PV2_3, PV2_4, PV2_5));
    return rcpp_result_gen;
END_RCPP
}
// Cwcs_p2s
SEXP Cwcs_p2s(Rcpp::NumericVector x, Rcpp::NumericVector y, Rcpp::String CTYPE1, Rcpp::String CTYPE2, double CRVAL1, double CRVAL2, double CRPIX1, double CRPIX2, double CD1_1, double CD1_2, double CD2_1, double CD2_2, Rcpp::String RADESYS, int EQUINOX, double PV1_1, double PV1_2, double PV1_3, double PV2_1, double PV2_2, double PV2_3, double PV2_4, double PV2_5);
RcppExport SEXP _Rwcs_Cwcs_p2s(SEXP xSEXP, SEXP ySEXP, SEXP CTYPE1SEXP, SEXP CTYPE2SEXP, SEXP CRVAL1SEXP, SEXP CRVAL2SEXP, SEXP CRPIX1SEXP, SEXP CRPIX2SEXP, SEXP CD1_1SEXP, SEXP CD1_2SEXP, SEXP CD2_1SEXP, SEXP CD2_2SEXP, SEXP RADESYSSEXP, SEXP EQUINOXSEXP, SEXP PV1_1SEXP, SEXP PV1_2SEXP, SEXP PV1_3SEXP, SEXP PV2_1SEXP, SEXP PV2_2SEXP, SEXP PV2_3SEXP, SEXP PV2_4SEXP, SEXP PV2_5SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type CTYPE1(CTYPE1SEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type CTYPE2(CTYPE2SEXP);
    Rcpp::traits::input_parameter< double >::type CRVAL1(CRVAL1SEXP);
    Rcpp::traits::input_parameter< double >::type CRVAL2(CRVAL2SEXP);
    Rcpp::traits::input_parameter< double >::type CRPIX1(CRPIX1SEXP);
    Rcpp::traits::input_parameter< double >::type CRPIX2(CRPIX2SEXP);
    Rcpp::traits::input_parameter< double >::type CD1_1(CD1_1SEXP);
    Rcpp::traits::input_parameter< double >::type CD1_2(CD1_2SEXP);
    Rcpp::traits::input_parameter< double >::type CD2_1(CD2_1SEXP);
    Rcpp::traits::input_parameter< double >::type CD2_2(CD2_2SEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type RADESYS(RADESYSSEXP);
    Rcpp::traits::input_parameter< int >::type EQUINOX(EQUINOXSEXP);
    Rcpp::traits::input_parameter< double >::type PV1_1(PV1_1SEXP);
    Rcpp::traits::input_parameter< double >::type PV1_2(PV1_2SEXP);
    Rcpp::traits::input_parameter< double >::type PV1_3(PV1_3SEXP);
    Rcpp::traits::input_parameter< double >::type PV2_1(PV2_1SEXP);
    Rcpp::traits::input_parameter< double >::type PV2_2(PV2_2SEXP);
    Rcpp::traits::input_parameter< double >::type PV2_3(PV2_3SEXP);
    Rcpp::traits::input_parameter< double >::type PV2_4(PV2_4SEXP);
    Rcpp::traits::input_parameter< double >::type PV2_5(PV2_5SEXP);
    rcpp_result_gen = Rcpp::wrap(Cwcs_p2s(x, y, CTYPE1, CTYPE2, CRVAL1, CRVAL2, CRPIX1, CRPIX2, CD1_1, CD1_2, CD2_1, CD2_2, RADESYS, EQUINOX, PV1_1, PV1_2, PV1_3, PV2_1, PV2_2, PV2_3, PV2_4, PV2_5));
    return rcpp_result_gen;
END_RCPP
}
// Cwcs_head_p2s
SEXP Cwcs_head_p2s(Rcpp::NumericVector x, Rcpp::NumericVector y, Rcpp::String header, int nkey, int WCSref, int ctrl);
RcppExport SEXP _Rwcs_Cwcs_head_p2s(SEXP xSEXP, SEXP ySEXP, SEXP headerSEXP, SEXP nkeySEXP, SEXP WCSrefSEXP, SEXP ctrlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type header(headerSEXP);
    Rcpp::traits::input_parameter< int >::type nkey(nkeySEXP);
    Rcpp::traits::input_parameter< int >::type WCSref(WCSrefSEXP);
    Rcpp::traits::input_parameter< int >::type ctrl(ctrlSEXP);
    rcpp_result_gen = Rcpp::wrap(Cwcs_head_p2s(x, y, header, nkey, WCSref, ctrl));
    return rcpp_result_gen;
END_RCPP
}
// Cwcs_head_s2p
SEXP Cwcs_head_s2p(Rcpp::NumericVector RA, Rcpp::NumericVector Dec, Rcpp::String header, int nkey, int WCSref, int ctrl);
RcppExport SEXP _Rwcs_Cwcs_head_s2p(SEXP RASEXP, SEXP DecSEXP, SEXP headerSEXP, SEXP nkeySEXP, SEXP WCSrefSEXP, SEXP ctrlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type RA(RASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Dec(DecSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type header(headerSEXP);
    Rcpp::traits::input_parameter< int >::type nkey(nkeySEXP);
    Rcpp::traits::input_parameter< int >::type WCSref(WCSrefSEXP);
    Rcpp::traits::input_parameter< int >::type ctrl(ctrlSEXP);
    rcpp_result_gen = Rcpp::wrap(Cwcs_head_s2p(RA, Dec, header, nkey, WCSref, ctrl));
    return rcpp_result_gen;
END_RCPP
}
// dilate_cpp
IntegerMatrix dilate_cpp(IntegerMatrix segim, IntegerMatrix kern, IntegerVector expand);
RcppExport SEXP _Rwcs_dilate_cpp(SEXP segimSEXP, SEXP kernSEXP, SEXP expandSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type segim(segimSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type kern(kernSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type expand(expandSEXP);
    rcpp_result_gen = Rcpp::wrap(dilate_cpp(segim, kern, expand));
    return rcpp_result_gen;
END_RCPP
}
// num_mat_add
NumericMatrix num_mat_add(NumericMatrix base, NumericMatrix add, IntegerMatrix ind, IntegerVector offset);
RcppExport SEXP _Rwcs_num_mat_add(SEXP baseSEXP, SEXP addSEXP, SEXP indSEXP, SEXP offsetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type base(baseSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type add(addSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type ind(indSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type offset(offsetSEXP);
    rcpp_result_gen = Rcpp::wrap(num_mat_add(base, add, ind, offset));
    return rcpp_result_gen;
END_RCPP
}
// num_mat_add_mult
NumericMatrix num_mat_add_mult(NumericMatrix base, NumericMatrix add, NumericMatrix mult, IntegerMatrix ind, IntegerVector offset);
RcppExport SEXP _Rwcs_num_mat_add_mult(SEXP baseSEXP, SEXP addSEXP, SEXP multSEXP, SEXP indSEXP, SEXP offsetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type base(baseSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type add(addSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mult(multSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type ind(indSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type offset(offsetSEXP);
    rcpp_result_gen = Rcpp::wrap(num_mat_add_mult(base, add, mult, ind, offset));
    return rcpp_result_gen;
END_RCPP
}
// int_mat_add
IntegerMatrix int_mat_add(IntegerMatrix base, IntegerMatrix add, IntegerMatrix ind, IntegerVector offset);
RcppExport SEXP _Rwcs_int_mat_add(SEXP baseSEXP, SEXP addSEXP, SEXP indSEXP, SEXP offsetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type base(baseSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type add(addSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type ind(indSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type offset(offsetSEXP);
    rcpp_result_gen = Rcpp::wrap(int_mat_add(base, add, ind, offset));
    return rcpp_result_gen;
END_RCPP
}
// int_mat_add_sin
IntegerMatrix int_mat_add_sin(IntegerMatrix base, int add, IntegerMatrix ind, IntegerVector offset);
RcppExport SEXP _Rwcs_int_mat_add_sin(SEXP baseSEXP, SEXP addSEXP, SEXP indSEXP, SEXP offsetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type base(baseSEXP);
    Rcpp::traits::input_parameter< int >::type add(addSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type ind(indSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type offset(offsetSEXP);
    rcpp_result_gen = Rcpp::wrap(int_mat_add_sin(base, add, ind, offset));
    return rcpp_result_gen;
END_RCPP
}
// stack_image_inVar
SEXP stack_image_inVar(NumericMatrix post_image, NumericMatrix post_inVar, IntegerMatrix post_weight, NumericMatrix pre_image, NumericMatrix pre_inVar, SEXP pre_weight_sexp, IntegerVector offset, Nullable<LogicalMatrix> post_mask);
RcppExport SEXP _Rwcs_stack_image_inVar(SEXP post_imageSEXP, SEXP post_inVarSEXP, SEXP post_weightSEXP, SEXP pre_imageSEXP, SEXP pre_inVarSEXP, SEXP pre_weight_sexpSEXP, SEXP offsetSEXP, SEXP post_maskSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type post_image(post_imageSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_inVar(post_inVarSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type post_weight(post_weightSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pre_image(pre_imageSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pre_inVar(pre_inVarSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pre_weight_sexp(pre_weight_sexpSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< Nullable<LogicalMatrix> >::type post_mask(post_maskSEXP);
    rcpp_result_gen = Rcpp::wrap(stack_image_inVar(post_image, post_inVar, post_weight, pre_image, pre_inVar, pre_weight_sexp, offset, post_mask));
    return rcpp_result_gen;
END_RCPP
}
// stack_image
SEXP stack_image(NumericMatrix post_image, IntegerMatrix post_weight, NumericMatrix pre_image, SEXP pre_weight_sexp, IntegerVector offset, Nullable<LogicalMatrix> post_mask);
RcppExport SEXP _Rwcs_stack_image(SEXP post_imageSEXP, SEXP post_weightSEXP, SEXP pre_imageSEXP, SEXP pre_weight_sexpSEXP, SEXP offsetSEXP, SEXP post_maskSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type post_image(post_imageSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type post_weight(post_weightSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pre_image(pre_imageSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pre_weight_sexp(pre_weight_sexpSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< Nullable<LogicalMatrix> >::type post_mask(post_maskSEXP);
    rcpp_result_gen = Rcpp::wrap(stack_image(post_image, post_weight, pre_image, pre_weight_sexp, offset, post_mask));
    return rcpp_result_gen;
END_RCPP
}
// stack_exp
SEXP stack_exp(NumericMatrix post_exp, NumericMatrix pre_exp, IntegerVector offset);
RcppExport SEXP _Rwcs_stack_exp(SEXP post_expSEXP, SEXP pre_expSEXP, SEXP offsetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type post_exp(post_expSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pre_exp(pre_expSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type offset(offsetSEXP);
    rcpp_result_gen = Rcpp::wrap(stack_exp(post_exp, pre_exp, offset));
    return rcpp_result_gen;
END_RCPP
}
// stack_exp_mask
SEXP stack_exp_mask(NumericMatrix post_exp, NumericMatrix pre_exp, IntegerVector offset, LogicalMatrix post_mask);
RcppExport SEXP _Rwcs_stack_exp_mask(SEXP post_expSEXP, SEXP pre_expSEXP, SEXP offsetSEXP, SEXP post_maskSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type post_exp(post_expSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pre_exp(pre_expSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< LogicalMatrix >::type post_mask(post_maskSEXP);
    rcpp_result_gen = Rcpp::wrap(stack_exp_mask(post_exp, pre_exp, offset, post_mask));
    return rcpp_result_gen;
END_RCPP
}
// mat_diff_sum
double mat_diff_sum(Rcpp::NumericMatrix mat1, Rcpp::NumericMatrix mat2, double scale, int delta_x, int delta_y);
RcppExport SEXP _Rwcs_mat_diff_sum(SEXP mat1SEXP, SEXP mat2SEXP, SEXP scaleSEXP, SEXP delta_xSEXP, SEXP delta_ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type mat1(mat1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type mat2(mat2SEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< int >::type delta_x(delta_xSEXP);
    Rcpp::traits::input_parameter< int >::type delta_y(delta_ySEXP);
    rcpp_result_gen = Rcpp::wrap(mat_diff_sum(mat1, mat2, scale, delta_x, delta_y));
    return rcpp_result_gen;
END_RCPP
}
// pnpoly
LogicalVector pnpoly(NumericVector testx, NumericVector testy, NumericVector vertx, NumericVector verty);
RcppExport SEXP _Rwcs_pnpoly(SEXP testxSEXP, SEXP testySEXP, SEXP vertxSEXP, SEXP vertySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type testx(testxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type testy(testySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vertx(vertxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type verty(vertySEXP);
    rcpp_result_gen = Rcpp::wrap(pnpoly(testx, testy, vertx, verty));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Rwcs_Cwcs_s2p", (DL_FUNC) &_Rwcs_Cwcs_s2p, 22},
    {"_Rwcs_Cwcs_p2s", (DL_FUNC) &_Rwcs_Cwcs_p2s, 22},
    {"_Rwcs_Cwcs_head_p2s", (DL_FUNC) &_Rwcs_Cwcs_head_p2s, 6},
    {"_Rwcs_Cwcs_head_s2p", (DL_FUNC) &_Rwcs_Cwcs_head_s2p, 6},
    {"_Rwcs_dilate_cpp", (DL_FUNC) &_Rwcs_dilate_cpp, 3},
    {"_Rwcs_num_mat_add", (DL_FUNC) &_Rwcs_num_mat_add, 4},
    {"_Rwcs_num_mat_add_mult", (DL_FUNC) &_Rwcs_num_mat_add_mult, 5},
    {"_Rwcs_int_mat_add", (DL_FUNC) &_Rwcs_int_mat_add, 4},
    {"_Rwcs_int_mat_add_sin", (DL_FUNC) &_Rwcs_int_mat_add_sin, 4},
    {"_Rwcs_stack_image_inVar", (DL_FUNC) &_Rwcs_stack_image_inVar, 8},
    {"_Rwcs_stack_image", (DL_FUNC) &_Rwcs_stack_image, 6},
    {"_Rwcs_stack_exp", (DL_FUNC) &_Rwcs_stack_exp, 3},
    {"_Rwcs_stack_exp_mask", (DL_FUNC) &_Rwcs_stack_exp_mask, 4},
    {"_Rwcs_mat_diff_sum", (DL_FUNC) &_Rwcs_mat_diff_sum, 5},
    {"_Rwcs_pnpoly", (DL_FUNC) &_Rwcs_pnpoly, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rwcs(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
